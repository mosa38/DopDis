#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <fstream>

using namespace std;

int* osnova;
int* dod; 
int* kom;
int* razm;
int* mas;
int n,m,per,most;

void Input();

int main()
{
Input();
cout<< "Components: ";
cout<<<<endl;
for (int i=0;i<n;i++)
cout<<mas[i]<<" ";
cout<<endl;
system("pause");
return 0;
}

void Zapol()
{
for(int j=0;j<n;j++)
{
dod[j]=kom[j]=j;
razm[j]=1;
osnova[j]=-1;
}
most=0;
}

int Pol(int i)
{
if(i==-1)
return -1;
return (dod[i]==i) ? i : dod[i]=Pol(dod[i]);
}

int PolKom(int i)
{
i=Pol(i);
return kom[i]==i ? i : kom[i]=PolKom(kom[i]);
}

void SozKor( int i)
{
int der=i,sin=-1;
i=Pol(i);
while (i!=-1)
{
int g =Pol(osnova[i]);
osnova[i]=sin;
kom[i]=der;
sin=i;
i=g;
}
razm[der]=razm[sin];
}

void Obyed(int k,int l)
{
int dl=-1;
vector<int> z,x;
++per;
for (int j=0;j<n;j++)
{
if(k!=-1)
{
k=Pol(k);
z.push_back(k);
if (mas[k]==per)
{
dl=k;
break;
}
mas[k]=per;
k=osnova[k];
}
if (l!=-1)
{
l=Pol(l);
x.push_back(l);
if (mas[l]==per)
{
dl=l;
break;
}
mas[l]=per;
l=osnova[l];
}
}
for (size_t j=0;j<z.size();++j)
{
dod[z[j]]=dl;
if (z[j]==dl)
break;
--most;
}
for(size_t j=0;j<x.size();++j)
{
dod[x[j]]=dl;
if (x[j]==dl)
break;
--most;
}
}
